// pata1020.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include"iostream"
#include"queue"
using namespace std;

struct node{
	int data;
	node *lchild, *rchild;
};

const int N = 30;
int a[N],b[N];
int n;

node* createTree(int postL, int postR,int inL, int inR){             //根据后序和中序序列建树
	if (postL > postR)
		return NULL;
	node* root = new node;
	root->data = a[postR];
	int temp;
	for (int i = 0; i < n; i++)            //中序序列中查找根结点
		if (b[i] == a[postR])
			temp = i;
	root->lchild = createTree(postL, postL + temp - inL - 1, inL, temp - 1);  //左子树递归建树
	root->rchild = createTree(postL + temp - inL, postR - 1, temp + 1, inR);  //右子树递归建树
	return root;
}

int cnt=1;                                  //cnt定义输出结果的个数，用来控制格式
void layerOrder(node* root){                //层序遍历输出结果
	queue<node*> q;
	q.push(root);
	while (!q.empty()){
		node* now = q.front();
		q.pop();
		if (cnt<n){
			cout << now->data << " ";
			cnt++;
		}
		else
			cout << now->data << endl;
		if (now->lchild != NULL)
			q.push(now->lchild);
		if (now->rchild != NULL)
			q.push(now->rchild);
	}
}

void main(){
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	node* root = createTree(0, n - 1, 0, n - 1);
	layerOrder(root);
}
