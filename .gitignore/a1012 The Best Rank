// pata1012.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include"iostream"
#include"string"
#include"map"
#include"vector"
#include"algorithm"
using namespace std;

const int M = 2000;

//定义学生结构体，包含学生id号，编程、数学、英语和平均分分数及排名和学生状态（是否在排名表中）
struct stu{             
	string id;
	int program;
	int math;
	int english;
	int avg;
	int avgrank;
	int programrank;
	int mathrank;
	int englishrank;
	bool status;
}Stu[M];

bool compareavg(stu a,stu b){       
	return a.avg > b.avg;
}

bool compareprogram(stu a, stu b){  
	return a.program > b.program;
}

bool comparemath(stu a, stu b){
	return a.math > b.math;
}

bool comparenglish(stu a, stu b){
	return a.english > b.english;
}

int bestrank(int a, int b, int c, int d){    //求四个排名的最小值
	int min = a;
	if (min > b)
		min = b;
	if (min > c)
		min = c;
	if (min > d)
		min = d;
	return min;
}

string symbol(stu a){         //最佳排名按照A,C,M,E的顺序返回
	if (bestrank(a.avgrank, a.programrank, a.mathrank, a.englishrank) == a.avgrank)
		return "A";
	else if (bestrank(a.avgrank, a.programrank, a.mathrank, a.englishrank) == a.programrank)
		return "C";
	else if (bestrank(a.avgrank, a.programrank, a.mathrank, a.englishrank) == a.mathrank)
		return "M";
	else if(bestrank(a.avgrank, a.programrank, a.mathrank, a.englishrank) == a.englishrank)
		return "E";
}

int main(){
	int n, m;
	cin >> n >> m;
	map<string, stu> mp;
	for (int i = 0; i < n; i++){
		cin >> Stu[i].id >> Stu[i].program >> Stu[i].math >> Stu[i].english;
		Stu[i].avg = (int)((double)(Stu[i].program + Stu[i].math + Stu[i].english) / 3 + 0.5); //平均分计算四舍五入
		Stu[i].status = true;
		mp[Stu[i].id] = Stu[i];
	}

	vector<string> vc;          //存放会检查排名的学生
	for (int i = 0; i < m; i++){
		string tempid;
		cin >> tempid;
		int count = 0;
		if (Stu[i].status == false){
			Stu[n + count].id = tempid;
			count++;
		}
		vc.push_back(tempid);
	}

	//按照平均分从大到小进行排序
	sort(Stu, Stu + n, compareavg);
	Stu[0].avgrank = 1;
	for (int i = 1; i < n; i++){
		if (Stu[i].avg == Stu[i - 1].avg)
			Stu[i].avgrank = Stu[i - 1].avgrank;
		else
			Stu[i].avgrank = i + 1;
		mp[Stu[i].id] = Stu[i];
	}

	//按照C语言成绩从大到小进行排序
	sort(Stu, Stu + n, compareprogram);
	Stu[0].programrank = 1;
	for (int i = 1; i < n; i++){
		if (Stu[i].program == Stu[i - 1].program)
			Stu[i].programrank = Stu[i - 1].programrank;
		else
			Stu[i].programrank = i + 1;
		mp[Stu[i].id] = Stu[i];
	}

	//按照数学成绩从大到小进行排序
	sort(Stu, Stu + n, comparemath);
	Stu[0].mathrank = 1;
	for (int i = 1; i < n; i++){
		if (Stu[i].math == Stu[i - 1].math)
			Stu[i].mathrank = Stu[i - 1].mathrank;
		else
			Stu[i].mathrank = i + 1;
		mp[Stu[i].id] = Stu[i];
	}

	//按照英语成绩从大到小进行排序
	sort(Stu, Stu + n, comparenglish);
	Stu[0].englishrank = 1;
	mp[Stu[0].id] = Stu[0];
	for (int i = 1; i < n; i++){
		if (Stu[i].english == Stu[i - 1].english)
			Stu[i].englishrank = Stu[i - 1].englishrank;
		else
			Stu[i].englishrank = i + 1;
		mp[Stu[i].id] = Stu[i];
	}

	//如果学生在排名表中，则输出最佳排名，否则输出N/A
	for (int i = 0; i < m;i++){
		if (mp[vc[i]].status == true)
			cout << bestrank(mp[vc[i]].avgrank, mp[vc[i]].programrank, mp[vc[i]].mathrank, mp[vc[i]].englishrank) << " " << symbol(mp[vc[i]]) << endl;
		else
			cout << "N/A" << endl;
	}
	return 0;
}
