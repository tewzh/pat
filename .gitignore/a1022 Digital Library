// pata1022.cpp : 定义控制台应用程序的入口点。
//

#include "stdafx.h"
#include"iostream"
#include"string"
#include"vector"
#include"utility"
#include"algorithm"
using namespace std;

const int N = 10005;
const int M = 1005;

//定义书本信息结构体，包含书的id号、标题、作者、关键词、出版社、出版年份
struct book{
	string id;
	string title;
	string author;
	string key;
	string publisher;
	string year;
}Book[N];

int main(){
	int n;
	cin >> n;
	cin.ignore();     //忽略enter

	//由于信息中包含有空格，因此使用getline接收输入
	for (int i = 0; i < n; i++){
		getline(cin, Book[i].id);
		getline(cin, Book[i].title);
		getline(cin, Book[i].author);
		getline(cin, Book[i].key);
		getline(cin, Book[i].publisher);
		getline(cin, Book[i].year);
	}
	int m;
	cin >> m;

	//定义vector容器保存搜索的结果
	vector<pair<string, vector<string>>> vc;

	for (int i = 0; i < m; i++){
		int num;
		char c;
		string words;
		cin >> num >> c;
		cin.ignore();     //忽略输入的enter
		getline(cin, words);   //输入搜索的关键信息
		vector<string> vcid;
		pair<string, vector<string>> p;   //pair键值对保存搜索信息和查找结果vector


		if (num == 1){
			int j;
			int status = 0;

			//在已有的书本信息中逐个搜索查找的信息
			for (j = 0; j < n; j++){
				if (Book[j].title == words){
					vcid.push_back(Book[j].id);
					status = 1;
				}
			}
			if (j == n&&status == 0)
				vcid.push_back("Not Found");
			else
				//将搜索结果按照id号从小到大进行排序
				sort(vcid.begin(), vcid.end());
		}
		else if (num == 2){
			int j;
			int status = 0;
			for (j = 0; j < n; j++){
				if (Book[j].author== words){
					vcid.push_back(Book[j].id);
					status = 1;
				}
			}
			if (j == n&&status == 0)
				vcid.push_back("Not Found");
			else
				sort(vcid.begin(), vcid.end());
		}
		else if (num == 3){
			int j;
			int status = 0;
			for (j = 0; j < n; j++){
				if (Book[j].key.find(words) != -1){
					vcid.push_back(Book[j].id);
					status = 1;
				}
			}
			if (j == n&&status == 0)
				vcid.push_back("Not Found");
			else
				sort(vcid.begin(), vcid.end());
		}
		else if (num == 4){
			int j;
			int status = 0;
			for (j = 0; j < n; j++){
				if (Book[j].publisher == words){
					vcid.push_back(Book[j].id);
					status = 1;
				}
			}
			if (j == n&&status == 0)
				vcid.push_back("Not Found");
			else
				sort(vcid.begin(), vcid.end());
		}
		else if (num == 5){
			int j;
			int status = 0;
			for (j = 0; j < n; j++){
				if (Book[j].year == words){
					vcid.push_back(Book[j].id);
					status = 1;
				}
			}
			if (j == n&&status == 0)
				vcid.push_back("Not Found");
			else
				sort(vcid.begin(), vcid.end());
		}
		p = make_pair((to_string(num) + ": " + words), vcid);
		vc.push_back(p);    //将本次结果保存到vector容器中
	}

	//按照输入的顺序输出结果
	for (int i = 0; i < vc.size(); i++){
		cout << vc[i].first << endl;
		for (int j = 0; j < vc[i].second.size(); j++)
			cout << vc[i].second[j] << endl;
	}
	return 0;
}
